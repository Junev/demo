<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.repository.mapper.SiloinfoMapper">
  <resultMap id="BaseResultMap" type="com.example.repository.model.Siloinfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 02 10:57:53 GMT+08:00 2023.
    -->
    <id column="batch_id" jdbcType="NVARCHAR" property="batchId" />
    <id column="task_id" jdbcType="NVARCHAR" property="taskId" />
    <id column="in_or_out" jdbcType="INTEGER" property="inOrOut" />
    <result column="brand_id" jdbcType="NVARCHAR" property="brandId" />
    <result column="brand_name" jdbcType="NVARCHAR" property="brandName" />
    <result column="mod_no" jdbcType="NVARCHAR" property="modNo" />
    <result column="mod_nm" jdbcType="NVARCHAR" property="modNm" />
    <result column="path_no" jdbcType="NVARCHAR" property="pathNo" />
    <result column="path_nm" jdbcType="NVARCHAR" property="pathNm" />
    <result column="cr_version" jdbcType="NVARCHAR" property="crVersion" />
    <result column="batch_weight" jdbcType="REAL" property="batchWeight" />
    <result column="amount_of_categories" jdbcType="REAL" property="amountOfCategories" />
    <result column="plan_start_time" jdbcType="TIMESTAMP" property="planStartTime" />
    <result column="plan_end_time" jdbcType="TIMESTAMP" property="planEndTime" />
    <result column="sequence_nm" jdbcType="REAL" property="sequenceNm" />
    <result column="status" jdbcType="REAL" property="status" />
    <result column="class_id" jdbcType="REAL" property="classId" />
    <result column="class_type" jdbcType="REAL" property="classType" />
    <result column="silo_id" jdbcType="REAL" property="siloId" />
    <result column="group_num" jdbcType="INTEGER" property="groupNum" />
    <result column="type_of_loaded" jdbcType="REAL" property="typeOfLoaded" />
    <result column="loaded_weight" jdbcType="REAL" property="loadedWeight" />
    <result column="dry_tobacco_weight" jdbcType="REAL" property="dryTobaccoWeight" />
    <result column="av_moisture" jdbcType="REAL" property="avMoisture" />
    <result column="remain_weight" jdbcType="REAL" property="remainWeight" />
    <result column="categories" jdbcType="REAL" property="categories" />
    <result column="rp_storetime" jdbcType="REAL" property="rpStoretime" />
    <result column="pv_storetime" jdbcType="REAL" property="pvStoretime" />
    <result column="inspection" jdbcType="INTEGER" property="inspection" />
    <result column="tob_status" jdbcType="INTEGER" property="tobStatus" />
    <result column="process_status" jdbcType="INTEGER" property="processStatus" />
    <result column="in_out_status" jdbcType="INTEGER" property="inOutStatus" />
    <result column="residence_time_day" jdbcType="INTEGER" property="residenceTimeDay" />
    <result column="residence_time_hour" jdbcType="INTEGER" property="residenceTimeHour" />
    <result column="residence_time_minute" jdbcType="INTEGER" property="residenceTimeMinute" />
    <result column="residence_time_seconds" jdbcType="INTEGER" property="residenceTimeSeconds" />
    <result column="loading_start_time" jdbcType="TIMESTAMP" property="loadingStartTime" />
    <result column="loading_end_time" jdbcType="TIMESTAMP" property="loadingEndTime" />
    <result column="discharge_start_time" jdbcType="TIMESTAMP" property="dischargeStartTime" />
    <result column="discharge_end_time" jdbcType="TIMESTAMP" property="dischargeEndTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 02 10:57:53 GMT+08:00 2023.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 02 10:57:53 GMT+08:00 2023.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 02 10:57:53 GMT+08:00 2023.
    -->
    batch_id, task_id, in_or_out, brand_id, brand_name, mod_no, mod_nm, path_no, path_nm, 
    cr_version, batch_weight, amount_of_categories, plan_start_time, plan_end_time, sequence_nm, 
    status, class_id, class_type, silo_id, group_num, type_of_loaded, loaded_weight, 
    dry_tobacco_weight, av_moisture, remain_weight, categories, rp_storetime, pv_storetime, 
    inspection, tob_status, process_status, in_out_status, residence_time_day, residence_time_hour, 
    residence_time_minute, residence_time_seconds, loading_start_time, loading_end_time, 
    discharge_start_time, discharge_end_time
  </sql>
  <select id="selectByExample" parameterType="com.example.repository.model.SiloinfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 02 10:57:53 GMT+08:00 2023.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SILOINFO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.example.repository.model.SiloinfoKey" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 02 10:57:53 GMT+08:00 2023.
    -->
    select 
    <include refid="Base_Column_List" />
    from SILOINFO
    where batch_id = #{batchId,jdbcType=NVARCHAR}
      and task_id = #{taskId,jdbcType=NVARCHAR}
      and in_or_out = #{inOrOut,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.repository.model.SiloinfoKey">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 02 10:57:53 GMT+08:00 2023.
    -->
    delete from SILOINFO
    where batch_id = #{batchId,jdbcType=NVARCHAR}
      and task_id = #{taskId,jdbcType=NVARCHAR}
      and in_or_out = #{inOrOut,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.repository.model.SiloinfoExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 02 10:57:53 GMT+08:00 2023.
    -->
    delete from SILOINFO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.repository.model.Siloinfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 02 10:57:53 GMT+08:00 2023.
    -->
    insert into SILOINFO (batch_id, task_id, in_or_out, 
      brand_id, brand_name, mod_no, 
      mod_nm, path_no, path_nm, 
      cr_version, batch_weight, amount_of_categories, 
      plan_start_time, plan_end_time, sequence_nm, 
      status, class_id, class_type, 
      silo_id, group_num, type_of_loaded, 
      loaded_weight, dry_tobacco_weight, av_moisture, 
      remain_weight, categories, rp_storetime, 
      pv_storetime, inspection, tob_status, 
      process_status, in_out_status, residence_time_day, 
      residence_time_hour, residence_time_minute, 
      residence_time_seconds, loading_start_time, 
      loading_end_time, discharge_start_time, 
      discharge_end_time)
    values (#{batchId,jdbcType=NVARCHAR}, #{taskId,jdbcType=NVARCHAR}, #{inOrOut,jdbcType=INTEGER}, 
      #{brandId,jdbcType=NVARCHAR}, #{brandName,jdbcType=NVARCHAR}, #{modNo,jdbcType=NVARCHAR}, 
      #{modNm,jdbcType=NVARCHAR}, #{pathNo,jdbcType=NVARCHAR}, #{pathNm,jdbcType=NVARCHAR}, 
      #{crVersion,jdbcType=NVARCHAR}, #{batchWeight,jdbcType=REAL}, #{amountOfCategories,jdbcType=REAL}, 
      #{planStartTime,jdbcType=TIMESTAMP}, #{planEndTime,jdbcType=TIMESTAMP}, #{sequenceNm,jdbcType=REAL}, 
      #{status,jdbcType=REAL}, #{classId,jdbcType=REAL}, #{classType,jdbcType=REAL}, 
      #{siloId,jdbcType=REAL}, #{groupNum,jdbcType=INTEGER}, #{typeOfLoaded,jdbcType=REAL}, 
      #{loadedWeight,jdbcType=REAL}, #{dryTobaccoWeight,jdbcType=REAL}, #{avMoisture,jdbcType=REAL}, 
      #{remainWeight,jdbcType=REAL}, #{categories,jdbcType=REAL}, #{rpStoretime,jdbcType=REAL}, 
      #{pvStoretime,jdbcType=REAL}, #{inspection,jdbcType=INTEGER}, #{tobStatus,jdbcType=INTEGER}, 
      #{processStatus,jdbcType=INTEGER}, #{inOutStatus,jdbcType=INTEGER}, #{residenceTimeDay,jdbcType=INTEGER}, 
      #{residenceTimeHour,jdbcType=INTEGER}, #{residenceTimeMinute,jdbcType=INTEGER}, 
      #{residenceTimeSeconds,jdbcType=INTEGER}, #{loadingStartTime,jdbcType=TIMESTAMP}, 
      #{loadingEndTime,jdbcType=TIMESTAMP}, #{dischargeStartTime,jdbcType=TIMESTAMP}, 
      #{dischargeEndTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.repository.model.Siloinfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 02 10:57:53 GMT+08:00 2023.
    -->
    insert into SILOINFO
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="batchId != null">
        batch_id,
      </if>
      <if test="taskId != null">
        task_id,
      </if>
      <if test="inOrOut != null">
        in_or_out,
      </if>
      <if test="brandId != null">
        brand_id,
      </if>
      <if test="brandName != null">
        brand_name,
      </if>
      <if test="modNo != null">
        mod_no,
      </if>
      <if test="modNm != null">
        mod_nm,
      </if>
      <if test="pathNo != null">
        path_no,
      </if>
      <if test="pathNm != null">
        path_nm,
      </if>
      <if test="crVersion != null">
        cr_version,
      </if>
      <if test="batchWeight != null">
        batch_weight,
      </if>
      <if test="amountOfCategories != null">
        amount_of_categories,
      </if>
      <if test="planStartTime != null">
        plan_start_time,
      </if>
      <if test="planEndTime != null">
        plan_end_time,
      </if>
      <if test="sequenceNm != null">
        sequence_nm,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="classType != null">
        class_type,
      </if>
      <if test="siloId != null">
        silo_id,
      </if>
      <if test="groupNum != null">
        group_num,
      </if>
      <if test="typeOfLoaded != null">
        type_of_loaded,
      </if>
      <if test="loadedWeight != null">
        loaded_weight,
      </if>
      <if test="dryTobaccoWeight != null">
        dry_tobacco_weight,
      </if>
      <if test="avMoisture != null">
        av_moisture,
      </if>
      <if test="remainWeight != null">
        remain_weight,
      </if>
      <if test="categories != null">
        categories,
      </if>
      <if test="rpStoretime != null">
        rp_storetime,
      </if>
      <if test="pvStoretime != null">
        pv_storetime,
      </if>
      <if test="inspection != null">
        inspection,
      </if>
      <if test="tobStatus != null">
        tob_status,
      </if>
      <if test="processStatus != null">
        process_status,
      </if>
      <if test="inOutStatus != null">
        in_out_status,
      </if>
      <if test="residenceTimeDay != null">
        residence_time_day,
      </if>
      <if test="residenceTimeHour != null">
        residence_time_hour,
      </if>
      <if test="residenceTimeMinute != null">
        residence_time_minute,
      </if>
      <if test="residenceTimeSeconds != null">
        residence_time_seconds,
      </if>
      <if test="loadingStartTime != null">
        loading_start_time,
      </if>
      <if test="loadingEndTime != null">
        loading_end_time,
      </if>
      <if test="dischargeStartTime != null">
        discharge_start_time,
      </if>
      <if test="dischargeEndTime != null">
        discharge_end_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="batchId != null">
        #{batchId,jdbcType=NVARCHAR},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=NVARCHAR},
      </if>
      <if test="inOrOut != null">
        #{inOrOut,jdbcType=INTEGER},
      </if>
      <if test="brandId != null">
        #{brandId,jdbcType=NVARCHAR},
      </if>
      <if test="brandName != null">
        #{brandName,jdbcType=NVARCHAR},
      </if>
      <if test="modNo != null">
        #{modNo,jdbcType=NVARCHAR},
      </if>
      <if test="modNm != null">
        #{modNm,jdbcType=NVARCHAR},
      </if>
      <if test="pathNo != null">
        #{pathNo,jdbcType=NVARCHAR},
      </if>
      <if test="pathNm != null">
        #{pathNm,jdbcType=NVARCHAR},
      </if>
      <if test="crVersion != null">
        #{crVersion,jdbcType=NVARCHAR},
      </if>
      <if test="batchWeight != null">
        #{batchWeight,jdbcType=REAL},
      </if>
      <if test="amountOfCategories != null">
        #{amountOfCategories,jdbcType=REAL},
      </if>
      <if test="planStartTime != null">
        #{planStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="planEndTime != null">
        #{planEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sequenceNm != null">
        #{sequenceNm,jdbcType=REAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=REAL},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=REAL},
      </if>
      <if test="classType != null">
        #{classType,jdbcType=REAL},
      </if>
      <if test="siloId != null">
        #{siloId,jdbcType=REAL},
      </if>
      <if test="groupNum != null">
        #{groupNum,jdbcType=INTEGER},
      </if>
      <if test="typeOfLoaded != null">
        #{typeOfLoaded,jdbcType=REAL},
      </if>
      <if test="loadedWeight != null">
        #{loadedWeight,jdbcType=REAL},
      </if>
      <if test="dryTobaccoWeight != null">
        #{dryTobaccoWeight,jdbcType=REAL},
      </if>
      <if test="avMoisture != null">
        #{avMoisture,jdbcType=REAL},
      </if>
      <if test="remainWeight != null">
        #{remainWeight,jdbcType=REAL},
      </if>
      <if test="categories != null">
        #{categories,jdbcType=REAL},
      </if>
      <if test="rpStoretime != null">
        #{rpStoretime,jdbcType=REAL},
      </if>
      <if test="pvStoretime != null">
        #{pvStoretime,jdbcType=REAL},
      </if>
      <if test="inspection != null">
        #{inspection,jdbcType=INTEGER},
      </if>
      <if test="tobStatus != null">
        #{tobStatus,jdbcType=INTEGER},
      </if>
      <if test="processStatus != null">
        #{processStatus,jdbcType=INTEGER},
      </if>
      <if test="inOutStatus != null">
        #{inOutStatus,jdbcType=INTEGER},
      </if>
      <if test="residenceTimeDay != null">
        #{residenceTimeDay,jdbcType=INTEGER},
      </if>
      <if test="residenceTimeHour != null">
        #{residenceTimeHour,jdbcType=INTEGER},
      </if>
      <if test="residenceTimeMinute != null">
        #{residenceTimeMinute,jdbcType=INTEGER},
      </if>
      <if test="residenceTimeSeconds != null">
        #{residenceTimeSeconds,jdbcType=INTEGER},
      </if>
      <if test="loadingStartTime != null">
        #{loadingStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loadingEndTime != null">
        #{loadingEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dischargeStartTime != null">
        #{dischargeStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dischargeEndTime != null">
        #{dischargeEndTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.repository.model.SiloinfoExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 02 10:57:53 GMT+08:00 2023.
    -->
    select count(*) from SILOINFO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 02 10:57:53 GMT+08:00 2023.
    -->
    update SILOINFO
    <set>
      <if test="row.batchId != null">
        batch_id = #{row.batchId,jdbcType=NVARCHAR},
      </if>
      <if test="row.taskId != null">
        task_id = #{row.taskId,jdbcType=NVARCHAR},
      </if>
      <if test="row.inOrOut != null">
        in_or_out = #{row.inOrOut,jdbcType=INTEGER},
      </if>
      <if test="row.brandId != null">
        brand_id = #{row.brandId,jdbcType=NVARCHAR},
      </if>
      <if test="row.brandName != null">
        brand_name = #{row.brandName,jdbcType=NVARCHAR},
      </if>
      <if test="row.modNo != null">
        mod_no = #{row.modNo,jdbcType=NVARCHAR},
      </if>
      <if test="row.modNm != null">
        mod_nm = #{row.modNm,jdbcType=NVARCHAR},
      </if>
      <if test="row.pathNo != null">
        path_no = #{row.pathNo,jdbcType=NVARCHAR},
      </if>
      <if test="row.pathNm != null">
        path_nm = #{row.pathNm,jdbcType=NVARCHAR},
      </if>
      <if test="row.crVersion != null">
        cr_version = #{row.crVersion,jdbcType=NVARCHAR},
      </if>
      <if test="row.batchWeight != null">
        batch_weight = #{row.batchWeight,jdbcType=REAL},
      </if>
      <if test="row.amountOfCategories != null">
        amount_of_categories = #{row.amountOfCategories,jdbcType=REAL},
      </if>
      <if test="row.planStartTime != null">
        plan_start_time = #{row.planStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.planEndTime != null">
        plan_end_time = #{row.planEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.sequenceNm != null">
        sequence_nm = #{row.sequenceNm,jdbcType=REAL},
      </if>
      <if test="row.status != null">
        status = #{row.status,jdbcType=REAL},
      </if>
      <if test="row.classId != null">
        class_id = #{row.classId,jdbcType=REAL},
      </if>
      <if test="row.classType != null">
        class_type = #{row.classType,jdbcType=REAL},
      </if>
      <if test="row.siloId != null">
        silo_id = #{row.siloId,jdbcType=REAL},
      </if>
      <if test="row.groupNum != null">
        group_num = #{row.groupNum,jdbcType=INTEGER},
      </if>
      <if test="row.typeOfLoaded != null">
        type_of_loaded = #{row.typeOfLoaded,jdbcType=REAL},
      </if>
      <if test="row.loadedWeight != null">
        loaded_weight = #{row.loadedWeight,jdbcType=REAL},
      </if>
      <if test="row.dryTobaccoWeight != null">
        dry_tobacco_weight = #{row.dryTobaccoWeight,jdbcType=REAL},
      </if>
      <if test="row.avMoisture != null">
        av_moisture = #{row.avMoisture,jdbcType=REAL},
      </if>
      <if test="row.remainWeight != null">
        remain_weight = #{row.remainWeight,jdbcType=REAL},
      </if>
      <if test="row.categories != null">
        categories = #{row.categories,jdbcType=REAL},
      </if>
      <if test="row.rpStoretime != null">
        rp_storetime = #{row.rpStoretime,jdbcType=REAL},
      </if>
      <if test="row.pvStoretime != null">
        pv_storetime = #{row.pvStoretime,jdbcType=REAL},
      </if>
      <if test="row.inspection != null">
        inspection = #{row.inspection,jdbcType=INTEGER},
      </if>
      <if test="row.tobStatus != null">
        tob_status = #{row.tobStatus,jdbcType=INTEGER},
      </if>
      <if test="row.processStatus != null">
        process_status = #{row.processStatus,jdbcType=INTEGER},
      </if>
      <if test="row.inOutStatus != null">
        in_out_status = #{row.inOutStatus,jdbcType=INTEGER},
      </if>
      <if test="row.residenceTimeDay != null">
        residence_time_day = #{row.residenceTimeDay,jdbcType=INTEGER},
      </if>
      <if test="row.residenceTimeHour != null">
        residence_time_hour = #{row.residenceTimeHour,jdbcType=INTEGER},
      </if>
      <if test="row.residenceTimeMinute != null">
        residence_time_minute = #{row.residenceTimeMinute,jdbcType=INTEGER},
      </if>
      <if test="row.residenceTimeSeconds != null">
        residence_time_seconds = #{row.residenceTimeSeconds,jdbcType=INTEGER},
      </if>
      <if test="row.loadingStartTime != null">
        loading_start_time = #{row.loadingStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.loadingEndTime != null">
        loading_end_time = #{row.loadingEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.dischargeStartTime != null">
        discharge_start_time = #{row.dischargeStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.dischargeEndTime != null">
        discharge_end_time = #{row.dischargeEndTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 02 10:57:53 GMT+08:00 2023.
    -->
    update SILOINFO
    set batch_id = #{row.batchId,jdbcType=NVARCHAR},
      task_id = #{row.taskId,jdbcType=NVARCHAR},
      in_or_out = #{row.inOrOut,jdbcType=INTEGER},
      brand_id = #{row.brandId,jdbcType=NVARCHAR},
      brand_name = #{row.brandName,jdbcType=NVARCHAR},
      mod_no = #{row.modNo,jdbcType=NVARCHAR},
      mod_nm = #{row.modNm,jdbcType=NVARCHAR},
      path_no = #{row.pathNo,jdbcType=NVARCHAR},
      path_nm = #{row.pathNm,jdbcType=NVARCHAR},
      cr_version = #{row.crVersion,jdbcType=NVARCHAR},
      batch_weight = #{row.batchWeight,jdbcType=REAL},
      amount_of_categories = #{row.amountOfCategories,jdbcType=REAL},
      plan_start_time = #{row.planStartTime,jdbcType=TIMESTAMP},
      plan_end_time = #{row.planEndTime,jdbcType=TIMESTAMP},
      sequence_nm = #{row.sequenceNm,jdbcType=REAL},
      status = #{row.status,jdbcType=REAL},
      class_id = #{row.classId,jdbcType=REAL},
      class_type = #{row.classType,jdbcType=REAL},
      silo_id = #{row.siloId,jdbcType=REAL},
      group_num = #{row.groupNum,jdbcType=INTEGER},
      type_of_loaded = #{row.typeOfLoaded,jdbcType=REAL},
      loaded_weight = #{row.loadedWeight,jdbcType=REAL},
      dry_tobacco_weight = #{row.dryTobaccoWeight,jdbcType=REAL},
      av_moisture = #{row.avMoisture,jdbcType=REAL},
      remain_weight = #{row.remainWeight,jdbcType=REAL},
      categories = #{row.categories,jdbcType=REAL},
      rp_storetime = #{row.rpStoretime,jdbcType=REAL},
      pv_storetime = #{row.pvStoretime,jdbcType=REAL},
      inspection = #{row.inspection,jdbcType=INTEGER},
      tob_status = #{row.tobStatus,jdbcType=INTEGER},
      process_status = #{row.processStatus,jdbcType=INTEGER},
      in_out_status = #{row.inOutStatus,jdbcType=INTEGER},
      residence_time_day = #{row.residenceTimeDay,jdbcType=INTEGER},
      residence_time_hour = #{row.residenceTimeHour,jdbcType=INTEGER},
      residence_time_minute = #{row.residenceTimeMinute,jdbcType=INTEGER},
      residence_time_seconds = #{row.residenceTimeSeconds,jdbcType=INTEGER},
      loading_start_time = #{row.loadingStartTime,jdbcType=TIMESTAMP},
      loading_end_time = #{row.loadingEndTime,jdbcType=TIMESTAMP},
      discharge_start_time = #{row.dischargeStartTime,jdbcType=TIMESTAMP},
      discharge_end_time = #{row.dischargeEndTime,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.repository.model.Siloinfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 02 10:57:53 GMT+08:00 2023.
    -->
    update SILOINFO
    <set>
      <if test="brandId != null">
        brand_id = #{brandId,jdbcType=NVARCHAR},
      </if>
      <if test="brandName != null">
        brand_name = #{brandName,jdbcType=NVARCHAR},
      </if>
      <if test="modNo != null">
        mod_no = #{modNo,jdbcType=NVARCHAR},
      </if>
      <if test="modNm != null">
        mod_nm = #{modNm,jdbcType=NVARCHAR},
      </if>
      <if test="pathNo != null">
        path_no = #{pathNo,jdbcType=NVARCHAR},
      </if>
      <if test="pathNm != null">
        path_nm = #{pathNm,jdbcType=NVARCHAR},
      </if>
      <if test="crVersion != null">
        cr_version = #{crVersion,jdbcType=NVARCHAR},
      </if>
      <if test="batchWeight != null">
        batch_weight = #{batchWeight,jdbcType=REAL},
      </if>
      <if test="amountOfCategories != null">
        amount_of_categories = #{amountOfCategories,jdbcType=REAL},
      </if>
      <if test="planStartTime != null">
        plan_start_time = #{planStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="planEndTime != null">
        plan_end_time = #{planEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sequenceNm != null">
        sequence_nm = #{sequenceNm,jdbcType=REAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=REAL},
      </if>
      <if test="classId != null">
        class_id = #{classId,jdbcType=REAL},
      </if>
      <if test="classType != null">
        class_type = #{classType,jdbcType=REAL},
      </if>
      <if test="siloId != null">
        silo_id = #{siloId,jdbcType=REAL},
      </if>
      <if test="groupNum != null">
        group_num = #{groupNum,jdbcType=INTEGER},
      </if>
      <if test="typeOfLoaded != null">
        type_of_loaded = #{typeOfLoaded,jdbcType=REAL},
      </if>
      <if test="loadedWeight != null">
        loaded_weight = #{loadedWeight,jdbcType=REAL},
      </if>
      <if test="dryTobaccoWeight != null">
        dry_tobacco_weight = #{dryTobaccoWeight,jdbcType=REAL},
      </if>
      <if test="avMoisture != null">
        av_moisture = #{avMoisture,jdbcType=REAL},
      </if>
      <if test="remainWeight != null">
        remain_weight = #{remainWeight,jdbcType=REAL},
      </if>
      <if test="categories != null">
        categories = #{categories,jdbcType=REAL},
      </if>
      <if test="rpStoretime != null">
        rp_storetime = #{rpStoretime,jdbcType=REAL},
      </if>
      <if test="pvStoretime != null">
        pv_storetime = #{pvStoretime,jdbcType=REAL},
      </if>
      <if test="inspection != null">
        inspection = #{inspection,jdbcType=INTEGER},
      </if>
      <if test="tobStatus != null">
        tob_status = #{tobStatus,jdbcType=INTEGER},
      </if>
      <if test="processStatus != null">
        process_status = #{processStatus,jdbcType=INTEGER},
      </if>
      <if test="inOutStatus != null">
        in_out_status = #{inOutStatus,jdbcType=INTEGER},
      </if>
      <if test="residenceTimeDay != null">
        residence_time_day = #{residenceTimeDay,jdbcType=INTEGER},
      </if>
      <if test="residenceTimeHour != null">
        residence_time_hour = #{residenceTimeHour,jdbcType=INTEGER},
      </if>
      <if test="residenceTimeMinute != null">
        residence_time_minute = #{residenceTimeMinute,jdbcType=INTEGER},
      </if>
      <if test="residenceTimeSeconds != null">
        residence_time_seconds = #{residenceTimeSeconds,jdbcType=INTEGER},
      </if>
      <if test="loadingStartTime != null">
        loading_start_time = #{loadingStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loadingEndTime != null">
        loading_end_time = #{loadingEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dischargeStartTime != null">
        discharge_start_time = #{dischargeStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dischargeEndTime != null">
        discharge_end_time = #{dischargeEndTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where batch_id = #{batchId,jdbcType=NVARCHAR}
      and task_id = #{taskId,jdbcType=NVARCHAR}
      and in_or_out = #{inOrOut,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.repository.model.Siloinfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 02 10:57:53 GMT+08:00 2023.
    -->
    update SILOINFO
    set brand_id = #{brandId,jdbcType=NVARCHAR},
      brand_name = #{brandName,jdbcType=NVARCHAR},
      mod_no = #{modNo,jdbcType=NVARCHAR},
      mod_nm = #{modNm,jdbcType=NVARCHAR},
      path_no = #{pathNo,jdbcType=NVARCHAR},
      path_nm = #{pathNm,jdbcType=NVARCHAR},
      cr_version = #{crVersion,jdbcType=NVARCHAR},
      batch_weight = #{batchWeight,jdbcType=REAL},
      amount_of_categories = #{amountOfCategories,jdbcType=REAL},
      plan_start_time = #{planStartTime,jdbcType=TIMESTAMP},
      plan_end_time = #{planEndTime,jdbcType=TIMESTAMP},
      sequence_nm = #{sequenceNm,jdbcType=REAL},
      status = #{status,jdbcType=REAL},
      class_id = #{classId,jdbcType=REAL},
      class_type = #{classType,jdbcType=REAL},
      silo_id = #{siloId,jdbcType=REAL},
      group_num = #{groupNum,jdbcType=INTEGER},
      type_of_loaded = #{typeOfLoaded,jdbcType=REAL},
      loaded_weight = #{loadedWeight,jdbcType=REAL},
      dry_tobacco_weight = #{dryTobaccoWeight,jdbcType=REAL},
      av_moisture = #{avMoisture,jdbcType=REAL},
      remain_weight = #{remainWeight,jdbcType=REAL},
      categories = #{categories,jdbcType=REAL},
      rp_storetime = #{rpStoretime,jdbcType=REAL},
      pv_storetime = #{pvStoretime,jdbcType=REAL},
      inspection = #{inspection,jdbcType=INTEGER},
      tob_status = #{tobStatus,jdbcType=INTEGER},
      process_status = #{processStatus,jdbcType=INTEGER},
      in_out_status = #{inOutStatus,jdbcType=INTEGER},
      residence_time_day = #{residenceTimeDay,jdbcType=INTEGER},
      residence_time_hour = #{residenceTimeHour,jdbcType=INTEGER},
      residence_time_minute = #{residenceTimeMinute,jdbcType=INTEGER},
      residence_time_seconds = #{residenceTimeSeconds,jdbcType=INTEGER},
      loading_start_time = #{loadingStartTime,jdbcType=TIMESTAMP},
      loading_end_time = #{loadingEndTime,jdbcType=TIMESTAMP},
      discharge_start_time = #{dischargeStartTime,jdbcType=TIMESTAMP},
      discharge_end_time = #{dischargeEndTime,jdbcType=TIMESTAMP}
    where batch_id = #{batchId,jdbcType=NVARCHAR}
      and task_id = #{taskId,jdbcType=NVARCHAR}
      and in_or_out = #{inOrOut,jdbcType=INTEGER}
  </update>
</mapper>