package com.example.repository.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class PrdCelltaskstoprecordExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PRD_CELLTASKSTOPRECORD
     *
     * @mbg.generated Wed Jan 17 18:17:49 GMT+08:00 2024
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PRD_CELLTASKSTOPRECORD
     *
     * @mbg.generated Wed Jan 17 18:17:49 GMT+08:00 2024
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PRD_CELLTASKSTOPRECORD
     *
     * @mbg.generated Wed Jan 17 18:17:49 GMT+08:00 2024
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRD_CELLTASKSTOPRECORD
     *
     * @mbg.generated Wed Jan 17 18:17:49 GMT+08:00 2024
     */
    public PrdCelltaskstoprecordExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRD_CELLTASKSTOPRECORD
     *
     * @mbg.generated Wed Jan 17 18:17:49 GMT+08:00 2024
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRD_CELLTASKSTOPRECORD
     *
     * @mbg.generated Wed Jan 17 18:17:49 GMT+08:00 2024
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRD_CELLTASKSTOPRECORD
     *
     * @mbg.generated Wed Jan 17 18:17:49 GMT+08:00 2024
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRD_CELLTASKSTOPRECORD
     *
     * @mbg.generated Wed Jan 17 18:17:49 GMT+08:00 2024
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRD_CELLTASKSTOPRECORD
     *
     * @mbg.generated Wed Jan 17 18:17:49 GMT+08:00 2024
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRD_CELLTASKSTOPRECORD
     *
     * @mbg.generated Wed Jan 17 18:17:49 GMT+08:00 2024
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRD_CELLTASKSTOPRECORD
     *
     * @mbg.generated Wed Jan 17 18:17:49 GMT+08:00 2024
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRD_CELLTASKSTOPRECORD
     *
     * @mbg.generated Wed Jan 17 18:17:49 GMT+08:00 2024
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRD_CELLTASKSTOPRECORD
     *
     * @mbg.generated Wed Jan 17 18:17:49 GMT+08:00 2024
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRD_CELLTASKSTOPRECORD
     *
     * @mbg.generated Wed Jan 17 18:17:49 GMT+08:00 2024
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PRD_CELLTASKSTOPRECORD
     *
     * @mbg.generated Wed Jan 17 18:17:49 GMT+08:00 2024
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTaskidIsNull() {
            addCriterion("TASKID is null");
            return (Criteria) this;
        }

        public Criteria andTaskidIsNotNull() {
            addCriterion("TASKID is not null");
            return (Criteria) this;
        }

        public Criteria andTaskidEqualTo(String value) {
            addCriterion("TASKID =", value, "taskid");
            return (Criteria) this;
        }

        public Criteria andTaskidNotEqualTo(String value) {
            addCriterion("TASKID <>", value, "taskid");
            return (Criteria) this;
        }

        public Criteria andTaskidGreaterThan(String value) {
            addCriterion("TASKID >", value, "taskid");
            return (Criteria) this;
        }

        public Criteria andTaskidGreaterThanOrEqualTo(String value) {
            addCriterion("TASKID >=", value, "taskid");
            return (Criteria) this;
        }

        public Criteria andTaskidLessThan(String value) {
            addCriterion("TASKID <", value, "taskid");
            return (Criteria) this;
        }

        public Criteria andTaskidLessThanOrEqualTo(String value) {
            addCriterion("TASKID <=", value, "taskid");
            return (Criteria) this;
        }

        public Criteria andTaskidLike(String value) {
            addCriterion("TASKID like", value, "taskid");
            return (Criteria) this;
        }

        public Criteria andTaskidNotLike(String value) {
            addCriterion("TASKID not like", value, "taskid");
            return (Criteria) this;
        }

        public Criteria andTaskidIn(List<String> values) {
            addCriterion("TASKID in", values, "taskid");
            return (Criteria) this;
        }

        public Criteria andTaskidNotIn(List<String> values) {
            addCriterion("TASKID not in", values, "taskid");
            return (Criteria) this;
        }

        public Criteria andTaskidBetween(String value1, String value2) {
            addCriterion("TASKID between", value1, value2, "taskid");
            return (Criteria) this;
        }

        public Criteria andTaskidNotBetween(String value1, String value2) {
            addCriterion("TASKID not between", value1, value2, "taskid");
            return (Criteria) this;
        }

        public Criteria andStopstarttimeIsNull() {
            addCriterion("STOPSTARTTIME is null");
            return (Criteria) this;
        }

        public Criteria andStopstarttimeIsNotNull() {
            addCriterion("STOPSTARTTIME is not null");
            return (Criteria) this;
        }

        public Criteria andStopstarttimeEqualTo(Date value) {
            addCriterion("STOPSTARTTIME =", value, "stopstarttime");
            return (Criteria) this;
        }

        public Criteria andStopstarttimeNotEqualTo(Date value) {
            addCriterion("STOPSTARTTIME <>", value, "stopstarttime");
            return (Criteria) this;
        }

        public Criteria andStopstarttimeGreaterThan(Date value) {
            addCriterion("STOPSTARTTIME >", value, "stopstarttime");
            return (Criteria) this;
        }

        public Criteria andStopstarttimeGreaterThanOrEqualTo(Date value) {
            addCriterion("STOPSTARTTIME >=", value, "stopstarttime");
            return (Criteria) this;
        }

        public Criteria andStopstarttimeLessThan(Date value) {
            addCriterion("STOPSTARTTIME <", value, "stopstarttime");
            return (Criteria) this;
        }

        public Criteria andStopstarttimeLessThanOrEqualTo(Date value) {
            addCriterion("STOPSTARTTIME <=", value, "stopstarttime");
            return (Criteria) this;
        }

        public Criteria andStopstarttimeIn(List<Date> values) {
            addCriterion("STOPSTARTTIME in", values, "stopstarttime");
            return (Criteria) this;
        }

        public Criteria andStopstarttimeNotIn(List<Date> values) {
            addCriterion("STOPSTARTTIME not in", values, "stopstarttime");
            return (Criteria) this;
        }

        public Criteria andStopstarttimeBetween(Date value1, Date value2) {
            addCriterion("STOPSTARTTIME between", value1, value2, "stopstarttime");
            return (Criteria) this;
        }

        public Criteria andStopstarttimeNotBetween(Date value1, Date value2) {
            addCriterion("STOPSTARTTIME not between", value1, value2, "stopstarttime");
            return (Criteria) this;
        }

        public Criteria andStopendtimeIsNull() {
            addCriterion("STOPENDTIME is null");
            return (Criteria) this;
        }

        public Criteria andStopendtimeIsNotNull() {
            addCriterion("STOPENDTIME is not null");
            return (Criteria) this;
        }

        public Criteria andStopendtimeEqualTo(Date value) {
            addCriterion("STOPENDTIME =", value, "stopendtime");
            return (Criteria) this;
        }

        public Criteria andStopendtimeNotEqualTo(Date value) {
            addCriterion("STOPENDTIME <>", value, "stopendtime");
            return (Criteria) this;
        }

        public Criteria andStopendtimeGreaterThan(Date value) {
            addCriterion("STOPENDTIME >", value, "stopendtime");
            return (Criteria) this;
        }

        public Criteria andStopendtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("STOPENDTIME >=", value, "stopendtime");
            return (Criteria) this;
        }

        public Criteria andStopendtimeLessThan(Date value) {
            addCriterion("STOPENDTIME <", value, "stopendtime");
            return (Criteria) this;
        }

        public Criteria andStopendtimeLessThanOrEqualTo(Date value) {
            addCriterion("STOPENDTIME <=", value, "stopendtime");
            return (Criteria) this;
        }

        public Criteria andStopendtimeIn(List<Date> values) {
            addCriterion("STOPENDTIME in", values, "stopendtime");
            return (Criteria) this;
        }

        public Criteria andStopendtimeNotIn(List<Date> values) {
            addCriterion("STOPENDTIME not in", values, "stopendtime");
            return (Criteria) this;
        }

        public Criteria andStopendtimeBetween(Date value1, Date value2) {
            addCriterion("STOPENDTIME between", value1, value2, "stopendtime");
            return (Criteria) this;
        }

        public Criteria andStopendtimeNotBetween(Date value1, Date value2) {
            addCriterion("STOPENDTIME not between", value1, value2, "stopendtime");
            return (Criteria) this;
        }

        public Criteria andStoptimelongIsNull() {
            addCriterion("STOPTIMELONG is null");
            return (Criteria) this;
        }

        public Criteria andStoptimelongIsNotNull() {
            addCriterion("STOPTIMELONG is not null");
            return (Criteria) this;
        }

        public Criteria andStoptimelongEqualTo(Long value) {
            addCriterion("STOPTIMELONG =", value, "stoptimelong");
            return (Criteria) this;
        }

        public Criteria andStoptimelongNotEqualTo(Long value) {
            addCriterion("STOPTIMELONG <>", value, "stoptimelong");
            return (Criteria) this;
        }

        public Criteria andStoptimelongGreaterThan(Long value) {
            addCriterion("STOPTIMELONG >", value, "stoptimelong");
            return (Criteria) this;
        }

        public Criteria andStoptimelongGreaterThanOrEqualTo(Long value) {
            addCriterion("STOPTIMELONG >=", value, "stoptimelong");
            return (Criteria) this;
        }

        public Criteria andStoptimelongLessThan(Long value) {
            addCriterion("STOPTIMELONG <", value, "stoptimelong");
            return (Criteria) this;
        }

        public Criteria andStoptimelongLessThanOrEqualTo(Long value) {
            addCriterion("STOPTIMELONG <=", value, "stoptimelong");
            return (Criteria) this;
        }

        public Criteria andStoptimelongIn(List<Long> values) {
            addCriterion("STOPTIMELONG in", values, "stoptimelong");
            return (Criteria) this;
        }

        public Criteria andStoptimelongNotIn(List<Long> values) {
            addCriterion("STOPTIMELONG not in", values, "stoptimelong");
            return (Criteria) this;
        }

        public Criteria andStoptimelongBetween(Long value1, Long value2) {
            addCriterion("STOPTIMELONG between", value1, value2, "stoptimelong");
            return (Criteria) this;
        }

        public Criteria andStoptimelongNotBetween(Long value1, Long value2) {
            addCriterion("STOPTIMELONG not between", value1, value2, "stoptimelong");
            return (Criteria) this;
        }

        public Criteria andEqustatusidIsNull() {
            addCriterion("EQUSTATUSID is null");
            return (Criteria) this;
        }

        public Criteria andEqustatusidIsNotNull() {
            addCriterion("EQUSTATUSID is not null");
            return (Criteria) this;
        }

        public Criteria andEqustatusidEqualTo(String value) {
            addCriterion("EQUSTATUSID =", value, "equstatusid");
            return (Criteria) this;
        }

        public Criteria andEqustatusidNotEqualTo(String value) {
            addCriterion("EQUSTATUSID <>", value, "equstatusid");
            return (Criteria) this;
        }

        public Criteria andEqustatusidGreaterThan(String value) {
            addCriterion("EQUSTATUSID >", value, "equstatusid");
            return (Criteria) this;
        }

        public Criteria andEqustatusidGreaterThanOrEqualTo(String value) {
            addCriterion("EQUSTATUSID >=", value, "equstatusid");
            return (Criteria) this;
        }

        public Criteria andEqustatusidLessThan(String value) {
            addCriterion("EQUSTATUSID <", value, "equstatusid");
            return (Criteria) this;
        }

        public Criteria andEqustatusidLessThanOrEqualTo(String value) {
            addCriterion("EQUSTATUSID <=", value, "equstatusid");
            return (Criteria) this;
        }

        public Criteria andEqustatusidLike(String value) {
            addCriterion("EQUSTATUSID like", value, "equstatusid");
            return (Criteria) this;
        }

        public Criteria andEqustatusidNotLike(String value) {
            addCriterion("EQUSTATUSID not like", value, "equstatusid");
            return (Criteria) this;
        }

        public Criteria andEqustatusidIn(List<String> values) {
            addCriterion("EQUSTATUSID in", values, "equstatusid");
            return (Criteria) this;
        }

        public Criteria andEqustatusidNotIn(List<String> values) {
            addCriterion("EQUSTATUSID not in", values, "equstatusid");
            return (Criteria) this;
        }

        public Criteria andEqustatusidBetween(String value1, String value2) {
            addCriterion("EQUSTATUSID between", value1, value2, "equstatusid");
            return (Criteria) this;
        }

        public Criteria andEqustatusidNotBetween(String value1, String value2) {
            addCriterion("EQUSTATUSID not between", value1, value2, "equstatusid");
            return (Criteria) this;
        }

        public Criteria andStopclassIsNull() {
            addCriterion("STOPCLASS is null");
            return (Criteria) this;
        }

        public Criteria andStopclassIsNotNull() {
            addCriterion("STOPCLASS is not null");
            return (Criteria) this;
        }

        public Criteria andStopclassEqualTo(Short value) {
            addCriterion("STOPCLASS =", value, "stopclass");
            return (Criteria) this;
        }

        public Criteria andStopclassNotEqualTo(Short value) {
            addCriterion("STOPCLASS <>", value, "stopclass");
            return (Criteria) this;
        }

        public Criteria andStopclassGreaterThan(Short value) {
            addCriterion("STOPCLASS >", value, "stopclass");
            return (Criteria) this;
        }

        public Criteria andStopclassGreaterThanOrEqualTo(Short value) {
            addCriterion("STOPCLASS >=", value, "stopclass");
            return (Criteria) this;
        }

        public Criteria andStopclassLessThan(Short value) {
            addCriterion("STOPCLASS <", value, "stopclass");
            return (Criteria) this;
        }

        public Criteria andStopclassLessThanOrEqualTo(Short value) {
            addCriterion("STOPCLASS <=", value, "stopclass");
            return (Criteria) this;
        }

        public Criteria andStopclassIn(List<Short> values) {
            addCriterion("STOPCLASS in", values, "stopclass");
            return (Criteria) this;
        }

        public Criteria andStopclassNotIn(List<Short> values) {
            addCriterion("STOPCLASS not in", values, "stopclass");
            return (Criteria) this;
        }

        public Criteria andStopclassBetween(Short value1, Short value2) {
            addCriterion("STOPCLASS between", value1, value2, "stopclass");
            return (Criteria) this;
        }

        public Criteria andStopclassNotBetween(Short value1, Short value2) {
            addCriterion("STOPCLASS not between", value1, value2, "stopclass");
            return (Criteria) this;
        }

        public Criteria andStoptypeIsNull() {
            addCriterion("STOPTYPE is null");
            return (Criteria) this;
        }

        public Criteria andStoptypeIsNotNull() {
            addCriterion("STOPTYPE is not null");
            return (Criteria) this;
        }

        public Criteria andStoptypeEqualTo(String value) {
            addCriterion("STOPTYPE =", value, "stoptype");
            return (Criteria) this;
        }

        public Criteria andStoptypeNotEqualTo(String value) {
            addCriterion("STOPTYPE <>", value, "stoptype");
            return (Criteria) this;
        }

        public Criteria andStoptypeGreaterThan(String value) {
            addCriterion("STOPTYPE >", value, "stoptype");
            return (Criteria) this;
        }

        public Criteria andStoptypeGreaterThanOrEqualTo(String value) {
            addCriterion("STOPTYPE >=", value, "stoptype");
            return (Criteria) this;
        }

        public Criteria andStoptypeLessThan(String value) {
            addCriterion("STOPTYPE <", value, "stoptype");
            return (Criteria) this;
        }

        public Criteria andStoptypeLessThanOrEqualTo(String value) {
            addCriterion("STOPTYPE <=", value, "stoptype");
            return (Criteria) this;
        }

        public Criteria andStoptypeLike(String value) {
            addCriterion("STOPTYPE like", value, "stoptype");
            return (Criteria) this;
        }

        public Criteria andStoptypeNotLike(String value) {
            addCriterion("STOPTYPE not like", value, "stoptype");
            return (Criteria) this;
        }

        public Criteria andStoptypeIn(List<String> values) {
            addCriterion("STOPTYPE in", values, "stoptype");
            return (Criteria) this;
        }

        public Criteria andStoptypeNotIn(List<String> values) {
            addCriterion("STOPTYPE not in", values, "stoptype");
            return (Criteria) this;
        }

        public Criteria andStoptypeBetween(String value1, String value2) {
            addCriterion("STOPTYPE between", value1, value2, "stoptype");
            return (Criteria) this;
        }

        public Criteria andStoptypeNotBetween(String value1, String value2) {
            addCriterion("STOPTYPE not between", value1, value2, "stoptype");
            return (Criteria) this;
        }

        public Criteria andStopreasonIsNull() {
            addCriterion("STOPREASON is null");
            return (Criteria) this;
        }

        public Criteria andStopreasonIsNotNull() {
            addCriterion("STOPREASON is not null");
            return (Criteria) this;
        }

        public Criteria andStopreasonEqualTo(String value) {
            addCriterion("STOPREASON =", value, "stopreason");
            return (Criteria) this;
        }

        public Criteria andStopreasonNotEqualTo(String value) {
            addCriterion("STOPREASON <>", value, "stopreason");
            return (Criteria) this;
        }

        public Criteria andStopreasonGreaterThan(String value) {
            addCriterion("STOPREASON >", value, "stopreason");
            return (Criteria) this;
        }

        public Criteria andStopreasonGreaterThanOrEqualTo(String value) {
            addCriterion("STOPREASON >=", value, "stopreason");
            return (Criteria) this;
        }

        public Criteria andStopreasonLessThan(String value) {
            addCriterion("STOPREASON <", value, "stopreason");
            return (Criteria) this;
        }

        public Criteria andStopreasonLessThanOrEqualTo(String value) {
            addCriterion("STOPREASON <=", value, "stopreason");
            return (Criteria) this;
        }

        public Criteria andStopreasonLike(String value) {
            addCriterion("STOPREASON like", value, "stopreason");
            return (Criteria) this;
        }

        public Criteria andStopreasonNotLike(String value) {
            addCriterion("STOPREASON not like", value, "stopreason");
            return (Criteria) this;
        }

        public Criteria andStopreasonIn(List<String> values) {
            addCriterion("STOPREASON in", values, "stopreason");
            return (Criteria) this;
        }

        public Criteria andStopreasonNotIn(List<String> values) {
            addCriterion("STOPREASON not in", values, "stopreason");
            return (Criteria) this;
        }

        public Criteria andStopreasonBetween(String value1, String value2) {
            addCriterion("STOPREASON between", value1, value2, "stopreason");
            return (Criteria) this;
        }

        public Criteria andStopreasonNotBetween(String value1, String value2) {
            addCriterion("STOPREASON not between", value1, value2, "stopreason");
            return (Criteria) this;
        }

        public Criteria andStopequcodeIsNull() {
            addCriterion("STOPEQUCODE is null");
            return (Criteria) this;
        }

        public Criteria andStopequcodeIsNotNull() {
            addCriterion("STOPEQUCODE is not null");
            return (Criteria) this;
        }

        public Criteria andStopequcodeEqualTo(String value) {
            addCriterion("STOPEQUCODE =", value, "stopequcode");
            return (Criteria) this;
        }

        public Criteria andStopequcodeNotEqualTo(String value) {
            addCriterion("STOPEQUCODE <>", value, "stopequcode");
            return (Criteria) this;
        }

        public Criteria andStopequcodeGreaterThan(String value) {
            addCriterion("STOPEQUCODE >", value, "stopequcode");
            return (Criteria) this;
        }

        public Criteria andStopequcodeGreaterThanOrEqualTo(String value) {
            addCriterion("STOPEQUCODE >=", value, "stopequcode");
            return (Criteria) this;
        }

        public Criteria andStopequcodeLessThan(String value) {
            addCriterion("STOPEQUCODE <", value, "stopequcode");
            return (Criteria) this;
        }

        public Criteria andStopequcodeLessThanOrEqualTo(String value) {
            addCriterion("STOPEQUCODE <=", value, "stopequcode");
            return (Criteria) this;
        }

        public Criteria andStopequcodeLike(String value) {
            addCriterion("STOPEQUCODE like", value, "stopequcode");
            return (Criteria) this;
        }

        public Criteria andStopequcodeNotLike(String value) {
            addCriterion("STOPEQUCODE not like", value, "stopequcode");
            return (Criteria) this;
        }

        public Criteria andStopequcodeIn(List<String> values) {
            addCriterion("STOPEQUCODE in", values, "stopequcode");
            return (Criteria) this;
        }

        public Criteria andStopequcodeNotIn(List<String> values) {
            addCriterion("STOPEQUCODE not in", values, "stopequcode");
            return (Criteria) this;
        }

        public Criteria andStopequcodeBetween(String value1, String value2) {
            addCriterion("STOPEQUCODE between", value1, value2, "stopequcode");
            return (Criteria) this;
        }

        public Criteria andStopequcodeNotBetween(String value1, String value2) {
            addCriterion("STOPEQUCODE not between", value1, value2, "stopequcode");
            return (Criteria) this;
        }

        public Criteria andStopequpartIsNull() {
            addCriterion("STOPEQUPART is null");
            return (Criteria) this;
        }

        public Criteria andStopequpartIsNotNull() {
            addCriterion("STOPEQUPART is not null");
            return (Criteria) this;
        }

        public Criteria andStopequpartEqualTo(String value) {
            addCriterion("STOPEQUPART =", value, "stopequpart");
            return (Criteria) this;
        }

        public Criteria andStopequpartNotEqualTo(String value) {
            addCriterion("STOPEQUPART <>", value, "stopequpart");
            return (Criteria) this;
        }

        public Criteria andStopequpartGreaterThan(String value) {
            addCriterion("STOPEQUPART >", value, "stopequpart");
            return (Criteria) this;
        }

        public Criteria andStopequpartGreaterThanOrEqualTo(String value) {
            addCriterion("STOPEQUPART >=", value, "stopequpart");
            return (Criteria) this;
        }

        public Criteria andStopequpartLessThan(String value) {
            addCriterion("STOPEQUPART <", value, "stopequpart");
            return (Criteria) this;
        }

        public Criteria andStopequpartLessThanOrEqualTo(String value) {
            addCriterion("STOPEQUPART <=", value, "stopequpart");
            return (Criteria) this;
        }

        public Criteria andStopequpartLike(String value) {
            addCriterion("STOPEQUPART like", value, "stopequpart");
            return (Criteria) this;
        }

        public Criteria andStopequpartNotLike(String value) {
            addCriterion("STOPEQUPART not like", value, "stopequpart");
            return (Criteria) this;
        }

        public Criteria andStopequpartIn(List<String> values) {
            addCriterion("STOPEQUPART in", values, "stopequpart");
            return (Criteria) this;
        }

        public Criteria andStopequpartNotIn(List<String> values) {
            addCriterion("STOPEQUPART not in", values, "stopequpart");
            return (Criteria) this;
        }

        public Criteria andStopequpartBetween(String value1, String value2) {
            addCriterion("STOPEQUPART between", value1, value2, "stopequpart");
            return (Criteria) this;
        }

        public Criteria andStopequpartNotBetween(String value1, String value2) {
            addCriterion("STOPEQUPART not between", value1, value2, "stopequpart");
            return (Criteria) this;
        }

        public Criteria andAuthorIsNull() {
            addCriterion("AUTHOR is null");
            return (Criteria) this;
        }

        public Criteria andAuthorIsNotNull() {
            addCriterion("AUTHOR is not null");
            return (Criteria) this;
        }

        public Criteria andAuthorEqualTo(String value) {
            addCriterion("AUTHOR =", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorNotEqualTo(String value) {
            addCriterion("AUTHOR <>", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorGreaterThan(String value) {
            addCriterion("AUTHOR >", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorGreaterThanOrEqualTo(String value) {
            addCriterion("AUTHOR >=", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorLessThan(String value) {
            addCriterion("AUTHOR <", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorLessThanOrEqualTo(String value) {
            addCriterion("AUTHOR <=", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorLike(String value) {
            addCriterion("AUTHOR like", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorNotLike(String value) {
            addCriterion("AUTHOR not like", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorIn(List<String> values) {
            addCriterion("AUTHOR in", values, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorNotIn(List<String> values) {
            addCriterion("AUTHOR not in", values, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorBetween(String value1, String value2) {
            addCriterion("AUTHOR between", value1, value2, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorNotBetween(String value1, String value2) {
            addCriterion("AUTHOR not between", value1, value2, "author");
            return (Criteria) this;
        }

        public Criteria andApprovaldateIsNull() {
            addCriterion("APPROVALDATE is null");
            return (Criteria) this;
        }

        public Criteria andApprovaldateIsNotNull() {
            addCriterion("APPROVALDATE is not null");
            return (Criteria) this;
        }

        public Criteria andApprovaldateEqualTo(Date value) {
            addCriterion("APPROVALDATE =", value, "approvaldate");
            return (Criteria) this;
        }

        public Criteria andApprovaldateNotEqualTo(Date value) {
            addCriterion("APPROVALDATE <>", value, "approvaldate");
            return (Criteria) this;
        }

        public Criteria andApprovaldateGreaterThan(Date value) {
            addCriterion("APPROVALDATE >", value, "approvaldate");
            return (Criteria) this;
        }

        public Criteria andApprovaldateGreaterThanOrEqualTo(Date value) {
            addCriterion("APPROVALDATE >=", value, "approvaldate");
            return (Criteria) this;
        }

        public Criteria andApprovaldateLessThan(Date value) {
            addCriterion("APPROVALDATE <", value, "approvaldate");
            return (Criteria) this;
        }

        public Criteria andApprovaldateLessThanOrEqualTo(Date value) {
            addCriterion("APPROVALDATE <=", value, "approvaldate");
            return (Criteria) this;
        }

        public Criteria andApprovaldateIn(List<Date> values) {
            addCriterion("APPROVALDATE in", values, "approvaldate");
            return (Criteria) this;
        }

        public Criteria andApprovaldateNotIn(List<Date> values) {
            addCriterion("APPROVALDATE not in", values, "approvaldate");
            return (Criteria) this;
        }

        public Criteria andApprovaldateBetween(Date value1, Date value2) {
            addCriterion("APPROVALDATE between", value1, value2, "approvaldate");
            return (Criteria) this;
        }

        public Criteria andApprovaldateNotBetween(Date value1, Date value2) {
            addCriterion("APPROVALDATE not between", value1, value2, "approvaldate");
            return (Criteria) this;
        }

        public Criteria andStopdescIsNull() {
            addCriterion("STOPDESC is null");
            return (Criteria) this;
        }

        public Criteria andStopdescIsNotNull() {
            addCriterion("STOPDESC is not null");
            return (Criteria) this;
        }

        public Criteria andStopdescEqualTo(String value) {
            addCriterion("STOPDESC =", value, "stopdesc");
            return (Criteria) this;
        }

        public Criteria andStopdescNotEqualTo(String value) {
            addCriterion("STOPDESC <>", value, "stopdesc");
            return (Criteria) this;
        }

        public Criteria andStopdescGreaterThan(String value) {
            addCriterion("STOPDESC >", value, "stopdesc");
            return (Criteria) this;
        }

        public Criteria andStopdescGreaterThanOrEqualTo(String value) {
            addCriterion("STOPDESC >=", value, "stopdesc");
            return (Criteria) this;
        }

        public Criteria andStopdescLessThan(String value) {
            addCriterion("STOPDESC <", value, "stopdesc");
            return (Criteria) this;
        }

        public Criteria andStopdescLessThanOrEqualTo(String value) {
            addCriterion("STOPDESC <=", value, "stopdesc");
            return (Criteria) this;
        }

        public Criteria andStopdescLike(String value) {
            addCriterion("STOPDESC like", value, "stopdesc");
            return (Criteria) this;
        }

        public Criteria andStopdescNotLike(String value) {
            addCriterion("STOPDESC not like", value, "stopdesc");
            return (Criteria) this;
        }

        public Criteria andStopdescIn(List<String> values) {
            addCriterion("STOPDESC in", values, "stopdesc");
            return (Criteria) this;
        }

        public Criteria andStopdescNotIn(List<String> values) {
            addCriterion("STOPDESC not in", values, "stopdesc");
            return (Criteria) this;
        }

        public Criteria andStopdescBetween(String value1, String value2) {
            addCriterion("STOPDESC between", value1, value2, "stopdesc");
            return (Criteria) this;
        }

        public Criteria andStopdescNotBetween(String value1, String value2) {
            addCriterion("STOPDESC not between", value1, value2, "stopdesc");
            return (Criteria) this;
        }

        public Criteria andIspubedIsNull() {
            addCriterion("ISPUBED is null");
            return (Criteria) this;
        }

        public Criteria andIspubedIsNotNull() {
            addCriterion("ISPUBED is not null");
            return (Criteria) this;
        }

        public Criteria andIspubedEqualTo(Long value) {
            addCriterion("ISPUBED =", value, "ispubed");
            return (Criteria) this;
        }

        public Criteria andIspubedNotEqualTo(Long value) {
            addCriterion("ISPUBED <>", value, "ispubed");
            return (Criteria) this;
        }

        public Criteria andIspubedGreaterThan(Long value) {
            addCriterion("ISPUBED >", value, "ispubed");
            return (Criteria) this;
        }

        public Criteria andIspubedGreaterThanOrEqualTo(Long value) {
            addCriterion("ISPUBED >=", value, "ispubed");
            return (Criteria) this;
        }

        public Criteria andIspubedLessThan(Long value) {
            addCriterion("ISPUBED <", value, "ispubed");
            return (Criteria) this;
        }

        public Criteria andIspubedLessThanOrEqualTo(Long value) {
            addCriterion("ISPUBED <=", value, "ispubed");
            return (Criteria) this;
        }

        public Criteria andIspubedIn(List<Long> values) {
            addCriterion("ISPUBED in", values, "ispubed");
            return (Criteria) this;
        }

        public Criteria andIspubedNotIn(List<Long> values) {
            addCriterion("ISPUBED not in", values, "ispubed");
            return (Criteria) this;
        }

        public Criteria andIspubedBetween(Long value1, Long value2) {
            addCriterion("ISPUBED between", value1, value2, "ispubed");
            return (Criteria) this;
        }

        public Criteria andIspubedNotBetween(Long value1, Long value2) {
            addCriterion("ISPUBED not between", value1, value2, "ispubed");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PRD_CELLTASKSTOPRECORD
     *
     * @mbg.generated do_not_delete_during_merge Wed Jan 17 18:17:49 GMT+08:00 2024
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PRD_CELLTASKSTOPRECORD
     *
     * @mbg.generated Wed Jan 17 18:17:49 GMT+08:00 2024
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}